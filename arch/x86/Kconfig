#
#	x86 ISA Configuration
#

config	X86_32
	bool "32-bit x86 kernel"
	---help---
	  Say yes to build a 32-bit kernel - formerly known as i386

config	X86_64
	bool "64-bit x86 kernel"
	depends on !X86_32
	---help---
	  Say yes to build a 64-bit kernel - formerly known as x86_64

config	X86
	def_bool yes
	select HAVE_ARCH_JUMP_LABEL
	select HAVE_KERNEL_BZIP2
	select HAVE_KERNEL_GZIP
	select HAVE_KERNEL_LZ4
	select HAVE_KERNEL_LZMA
	select HAVE_KERNEL_LZO
	select HAVE_KERNEL_X

config	OUTPUT_FORMAT
	string
	default "elf32-i386" if X86_32
	default "elf64-x86-64" if X86_64

config	ARCH_DEFCONFIG
	string
	default "arch/x86/configs/i386_defconfig" if X86_32
	default "arch/x86/configs/x86_64_defconfig" if X86_64

menu	"Processor type and features"

config	SMP
	bool "Symmetric multi-processing support"
	---help---
	  This enables support for systems with more than one CPU. If you have
	  a system with only one CPU, say N. If you have a system with more
	  than one CPU, say Y.

	  If you say N here, the kernel will run on uni- and multiprocessor
	  machines, but will use only one CPU of a multiprocessor machine. If
	  you say Y here, the kernel will run on many, but not all,
	  uniprocessor machines. On a uniprocessor machine, the kernel
	  will run faster if you say N here.

	  Note that if you say Y here and choose architecture "586" or
	  "Pentium" under "Processor family", the kernel will not work on 486
	  architectures. Similarly, multiprocessor kernels for the "PPro"
	  architecture may not work on all Pentium based boards.

	  People using multiprocessor machines who say Y here should also say
	  Y to "Enhanced Real Time Clock Support", below. The "Advanced Power
	  Management" code will be disabled if you say Y here.

	  See also <file:Documentation/x86/i386/IO-APIC.txt>,
	  <file:Documentation/nmi_watchdog.txt> and the SMP-HOWTO available at
	  <http://www.tldp.org/docs.html#howto>.

	  If you don't know what to do here, say N.

endmenu


config	SPINLOCK_TICKET
	bool "Ticket Spinlock Implementation"
	---help---
	  This enables x86 spinlock implemented in tickets version. FIFO ticket
	  spinlock ensures fairness among different CPUS with negligible cost.
	  
	  If you say N here, the kernel will implement x86 spinlock in "dec" version,
	  which is implemented without any fairness guarentee. This is the default version.

	  If you don't know what to do here, say N.
