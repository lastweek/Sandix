2015/04/14. 
Call C functions from assemble is a little tricky.
As designs, the bootsect do not need link. but header.s, main.c and so on need to
be linked together to form the real-mode kernel image. Because the link process
is done under 16-bit mode, maybe it's a little different from 32-bit linking.

Tonight i tried to link header.o and main.o together with some difficult. So, in
my opinion, i should try to learn ld scripts to get things done more efficency.

When we met some fucking error that we tried very very hard to find, just read
the dame fucking assemble code!

2015/04/15
Today i tried using i386-elf-gcc-4.72 to generate assemble file.
In the fucking real-mode, a call instruction just push 2bytes into stack,
but gcc-4.72 use 8(%ebp) to get the first argument by default!!! It should use 6(%ebp)!!!!

Whatever, gcc-4.72 can do nothing about this. So i wanna download gcc-5.1 source code, build
a cross-compile. You know how long compilation will take??!!!!!!

Before download gcc, i tried compile with my native gcc-4.9.2 -m16. It turns out the code still
use 8(%ebp) to get the argument.

Maybe there are some other opinions about stack alignment.
